library(tidyverse)
launches <- read_csv("https://raw.githubusercontent.com/aalhamadani/datasets/refs/heads/main/CIACountries.csv")
library(tidyverse)
CIA <- read_csv("https://raw.githubusercontent.com/aalhamadani/datasets/refs/heads/main/CIACountries.csv")
library(tidyverse)
CIA <- read_csv("https://raw.githubusercontent.com/aalhamadani/datasets/refs/heads/main/CIACountries.csv")
View(CIA)
install.packages("plotly")
library(plotly)
CIA <- read_csv("https://raw.githubusercontent.com/aalhamadani/datasets/refs/heads/main/CIACountries.csv")
# Basic interactive scatter plot
p <- ggplot(CIA, aes(x = pop, y = gdp,
text = paste("Country:", country,
"<br>Population:", pop,
"<br>GDP:", gdp,
"<br>Area:", area,
"<br>Oil Production:", oil_prod,
"<br>Internet Users:", net_users))) +
geom_point(aes(size = area, color = oil_prod), alpha = 0.7) +
scale_x_log10(labels = scales::comma) +
scale_y_log10(labels = scales::dollar) +
labs(title = "GDP vs. Population by Country",
x = "Population (log scale)",
y = "GDP (log scale)",
color = "Oil Production",
size = "Area (sq km)") +
theme_minimal()
ggplotly(p, tooltip = "text")
install.packages("sf")
install.packages("leaflet")
install.packages("rnaturalearth")
install.packages("rnaturalearthdata")
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
# Get world country shapefile
world <- ne_countries(scale = "medium", returnclass = "sf")
# Join CIA data to world map by country name
# Adjust join as needed for your dataset's country names
world_cia <- left_join(world, CIA, by = c("name" = "country"))
# Make a simple interactive map of GDP
leaflet(world_cia) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~colorQuantile("YlOrRd", gdp, n = 7)(gdp),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1,
label = ~paste0(name, "<br>GDP: $", formatC(gdp, big.mark = ",")),
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
fillOpacity = 0.9,
bringToFront = TRUE
)
) %>%
addLegend(
pal = colorQuantile("YlOrRd", world_cia$gdp, n = 7),
values = ~gdp,
opacity = 0.7,
title = "GDP",
position = "bottomright"
)
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
# Get world country shapefile
world <- ne_countries(scale = "medium", returnclass = "sf")
st_write(world_cia, "world_cia.shp")
# Join CIA data to world map by country name
# Adjust join as needed for your dataset's country names
world_cia <- left_join(world, CIA, by = c("name" = "country"))
# Make a simple interactive map of GDP
leaflet(world_cia) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~colorQuantile("YlOrRd", gdp, n = 7)(gdp),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1,
label = ~paste0(name, "<br>GDP: $", formatC(gdp, big.mark = ",")),
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
fillOpacity = 0.9,
bringToFront = TRUE
)
) %>%
addLegend(
pal = colorQuantile("YlOrRd", world_cia$gdp, n = 7),
values = ~gdp,
opacity = 0.7,
title = "GDP",
position = "bottomright"
)
# Get world country shapefile
world <- ne_countries(scale = "medium", returnclass = "sf")
# Join CIA data to world map by country name
world_cia <- left_join(world, CIA, by = c("name" = "country"))
# Fit a simple linear model: GDP ~ Population + Internet Users
model <- lm(gdp ~ pop + net_users, data = CIA)
# Add model predictions to the spatial data
world_cia$gdp_pred <- predict(model, newdata = world_cia)
# Visualize observed GDP
map_observed <- leaflet(world_cia) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~colorQuantile("YlOrRd", gdp, n = 7)(gdp),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1,
label = ~paste0(name, "<br>Observed GDP: $", formatC(gdp, big.mark = ",")),
highlightOptions = highlightOptions(weight = 2, color = "#666", fillOpacity = 0.9, bringToFront = TRUE)
) %>%
addLegend(
pal = colorQuantile("YlOrRd", world_cia$gdp, n = 7),
values = ~gdp,
opacity = 0.7,
title = "Observed GDP",
position = "bottomright"
)
# Visualize predicted GDP
map_predicted <- leaflet(world_cia) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~colorQuantile("Blues", gdp_pred, n = 7)(gdp_pred),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1,
label = ~paste0(name, "<br>Predicted GDP: $", formatC(gdp_pred, big.mark = ",")),
highlightOptions = highlightOptions(weight = 2, color = "#666", fillOpacity = 0.9, bringToFront = TRUE)
) %>%
addLegend(
pal = colorQuantile("Blues", world_cia$gdp_pred, n = 7),
values = ~gdp_pred,
opacity = 0.7,
title = "Predicted GDP",
position = "bottomright"
)
# Print the maps in your R environment
map_observed
map_predicted
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
# Scatterplot with regression line
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(
title = "Relationship between Population and GDP",
x = "Population",
y = "GDP"
)
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
# Get world country shapefile
world <- ne_countries(scale = "medium", returnclass = "sf")
st_write(world_cia, "world_cia.shp")
library(sf)
library(leaflet)
library(rnaturalearth)
library(rnaturalearthdata)
# Get world country shapefile
world <- ne_countries(scale = "medium", returnclass = "sf")
# Join CIA data to world map by country name
# Adjust join as needed for your dataset's country names
world_cia <- left_join(world, CIA, by = c("name" = "country"))
# Make a simple interactive map of GDP
leaflet(world_cia) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(
fillColor = ~colorQuantile("YlOrRd", gdp, n = 7)(gdp),
fillOpacity = 0.8,
color = "#BDBDC3",
weight = 1,
label = ~paste0(name, "<br>GDP: $", formatC(gdp, big.mark = ",")),
highlightOptions = highlightOptions(
weight = 2,
color = "#666",
fillOpacity = 0.9,
bringToFront = TRUE
)
) %>%
addLegend(
pal = colorQuantile("YlOrRd", world_cia$gdp, n = 7),
values = ~gdp,
opacity = 0.7,
title = "GDP",
position = "bottomright"
)
library(plotly);
CIA <- read_csv("https://raw.githubusercontent.com/aalhamadani/datasets/refs/heads/main/CIACountries.csv");
p <- ggplot(CIA, aes(x = pop, y = gdp,
text = paste("Country:", country, "<br>Population:", pop, "<br>GDP:", gdp, "<br>Area:", area, "<br>Oil Production:", oil_prod, "<br>Internet Users:", net_users))) +
geom_point(aes(size = area, color = oil_prod), alpha = 0.7) +
scale_x_log10(labels = scales::comma) +
scale_y_log10(labels = scales::dollar) +
labs(title = "GDP vs. Population by Country",
x = "Population (log scale)", y = "GDP (log scale)",
color = "Oil Production", size = "Area (sq km)") +
theme_minimal();
ggplotly(p, tooltip = "text")
library(sf);
library(leaflet);
library(rnaturalearth);
library(rnaturalearthdata);
world <- ne_countries(scale = "medium", returnclass = "sf");
world_cia <- left_join(world, CIA, by = c("name" = "country"));
leaflet(world_cia) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", gdp, n = 7)(gdp),
fillOpacity = 0.8, color = "#BDBDC3", weight = 1,
label = ~paste0(name, "<br>GDP: $", formatC(gdp, big.mark = ",")),
highlightOptions = highlightOptions(weight = 2, color = "#666", fillOpacity = 0.9, bringToFront = TRUE)) %>%
addLegend(pal = colorQuantile("YlOrRd", world_cia$gdp, n = 7),
values = ~gdp, opacity = 0.7, title = "GDP", position = "bottomright")
model <- lm(gdp ~ pop, data = CIA)
ggplot(CIA, aes(x = pop, y = gdp)) +
scale_x_continuous(limits = c(0, 4e+08))
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Relationship between Population and GDP", x = "Population", y = "GDP")
# Load the ggplot2 package
library(ggplot2)
# Create example data
df <- data.frame(
x = c(1e8, 2e8, 3e8, 5e8),  # x values (some above 4e+08)
y = c(10, 20, 30, 40)        # y values
)
# Create the plot with X axis limited to 4e+08
ggplot(df, aes(x = x, y = y)) +
geom_point(size = 3, color = "steelblue") +
scale_x_continuous(limits = c(0, 4e+08)) +
labs(
title = "Scatter Plot with X Axis Limited to 4e+08",
x = "X Value",
y = "Y Value"
) +
theme_minimal()
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
# Scatterplot with regression line
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(
title = "Relationship between Population and GDP",
x = "Population",
y = "GDP"
)
library(plotly);
CIA <- read_csv("https://raw.githubusercontent.com/aalhamadani/datasets/refs/heads/main/CIACountries.csv");
p <- ggplot(CIA, aes(x = pop, y = gdp, text = paste("Country:", country, "<br>Population:", pop, "<br>GDP:", gdp, "<br>Area:", area, "<br>Oil Production:", oil_prod, "<br>Internet Users:", net_users))) +
geom_point(aes(size = area, color = oil_prod), alpha = 0.7) +
scale_x_log10(labels = scales::comma) +
scale_y_log10(labels = scales::dollar) +
labs(title = "GDP vs. Population by Country", x = "Population (log scale)", y = "GDP (log scale)",color = "Oil Production", size = "Area (sq km)") +
theme_minimal();
ggplotly(p, tooltip = "text")
library(sf);
library(leaflet);
library(rnaturalearth);
library(rnaturalearthdata);
world <- ne_countries(scale = "medium", returnclass = "sf");
world_cia <- left_join(world, CIA, by = c("name" = "country"));
leaflet(world_cia) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", gdp, n = 7)(gdp), fillOpacity = 0.8, color = "#BDBDC3", weight = 1, label = ~paste0(name, "<br>GDP: $", formatC(gdp, big.mark = ",")),
highlightOptions = highlightOptions(weight = 2, color = "#666", fillOpacity = 0.9, bringToFront = TRUE)) %>%
addLegend(pal = colorQuantile("YlOrRd", world_cia$gdp, n = 7), values = ~gdp, opacity = 0.7, title = "GDP", position = "bottomright")
library(plotly);
CIA <- read_csv("https://raw.githubusercontent.com/aalhamadani/datasets/refs/heads/main/CIACountries.csv");
p <- ggplot(CIA, aes(x = pop, y = gdp, text = paste("Country:", country, "<br>Population:", pop, "<br>GDP:", gdp, "<br>Area:", area, "<br>Oil Production:", oil_prod, "<br>Internet Users:", net_users))) +
geom_point(aes(size = area, color = oil_prod), alpha = 0.7) +
scale_x_log10(labels = scales::comma) +
scale_y_log10(labels = scales::dollar) +
labs(title = "GDP vs. Population by Country", x = "Population (log scale)", y = "GDP (log scale)",color = "Oil Production", size = "Area (sq km)") +
theme_minimal();
ggplotly(p, tooltip = "text")
library(sf);
library(leaflet);
library(rnaturalearth);
library(rnaturalearthdata);
world <- ne_countries(scale = "medium", returnclass = "sf");
world_cia <- left_join(world, CIA, by = c("name" = "country"));
leaflet(world_cia) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~colorQuantile("YlOrRd", gdp, n = 7)(gdp), fillOpacity = 0.8, color = "#BDBDC3", weight = 1, label = ~paste0(name, "<br>GDP: $", formatC(gdp, big.mark = ",")),
highlightOptions = highlightOptions(weight = 2, color = "#666", fillOpacity = 0.9, bringToFront = TRUE)) %>%
addLegend(pal = colorQuantile("YlOrRd", world_cia$gdp, n = 7), values = ~gdp, opacity = 0.7, title = "GDP", position = "bottomright")
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Relationship between Population and GDP", x = "Population", y = "GDP")
library(sf);
library(leaflet);
library(rnaturalearth);
library(rnaturalearthdata);
world <- ne_countries(scale = "medium", returnclass = "sf")
world_cia <- merge(world, CIA, by.x = "name", by.y = "country", all.x = TRUE)
pal <- colorNumeric("YlOrRd", world_cia$gdp, na.color = "transparent")
leaflet(world_cia) %>%
addTiles() %>%
addPolygons(fillColor = ~pal(gdp), color = "white", weight = 1, fillOpacity = 0.8)
library(sf);
library(leaflet);
library(rnaturalearth);
library(rnaturalearthdata);
world <- ne_countries(scale = "medium", returnclass = "sf")
world_cia <- merge(world, CIA, by.x = "name", by.y = "country", all.x = TRUE)
pal <- colorNumeric("YlOrRd", world_cia$gdp, na.color = "transparent")
leaflet(world_cia) %>%
addTiles() %>%
addPolygons(fillColor = ~pal(gdp), color = "red", weight = 1, fillOpacity = 0.8)
library(sf);
library(leaflet);
library(rnaturalearth);
library(rnaturalearthdata);
world <- ne_countries(scale = "medium", returnclass = "sf")
world_cia <- merge(world, CIA, by.x = "name", by.y = "country", all.x = TRUE)
pal <- colorNumeric("YlOrRd", world_cia$gdp, na.color = "transparent")
leaflet(world_cia) %>%
addTiles() %>%
addPolygons(fillColor = ~pal(gdp), color = "black", weight = 1, fillOpacity = 0.8)
library(leaflet)
library(sf)
library(rnaturalearth)
# Fix country name for the USA in your CIA data
CIA$country[CIA$country == "United States"] <- "United States of America"
# Get world map and merge with CIA data
world <- ne_countries(scale = "medium", returnclass = "sf")
world_cia <- merge(world, CIA, by.x = "name", by.y = "country", all.x = TRUE)
# Color palette for GDP
pal <- colorNumeric("YlOrRd", world_cia$gdp, na.color = "transparent")
# Basic GDP choropleth
leaflet(world_cia) %>%
addTiles() %>%
addPolygons(fillColor = ~pal(gdp), color = "white", weight = 1, fillOpacity = 0.8)
library(leaflet)
library(sf)
library(rnaturalearth)
CIA$country[CIA$country == "United States"] <- "United States of America"
world <- ne_countries(scale = "medium", returnclass = "sf")
world_cia <- merge(world, CIA, by.x = "name", by.y = "country", all.x = TRUE)
pal <- colorNumeric("YlOrRd", world_cia$gdp, na.color = "transparent")
leaflet(world_cia) %>%
addTiles() %>%
addPolygons(fillColor = ~pal(gdp), color = "black", weight = 1, fillOpacity = 0.8)
library(leaflet)
library(sf)
library(rnaturalearth)
CIA$country[CIA$country == "United States"] <- "United States of America"
world <- ne_countries(scale = "medium", returnclass = "sf")
world_cia <- merge(world, CIA, by.x = "name", by.y = "country", all.x = TRUE)
pal <- colorNumeric("viridis", world_cia$gdp, na.color = "transparent")
leaflet(world_cia) %>%
addTiles() %>%
addPolygons(fillColor = ~pal(gdp), color = "black", weight = 1, fillOpacity = 0.8)
library(leaflet)
library(sf)
library(rnaturalearth)
CIA$country[CIA$country == "United States"] <- "United States of America"
world <- ne_countries(scale = "medium", returnclass = "sf")
world_cia <- merge(world, CIA, by.x = "name", by.y = "country", all.x = TRUE)
pal <- colorNumeric("RdYlBu", world_cia$gdp, na.color = "transparent")
leaflet(world_cia) %>%
addTiles() %>%
addPolygons(fillColor = ~pal(gdp), color = "black", weight = 1, fillOpacity = 0.8)
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
scale_x_continuous() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Relationship between Population and GDP", x = "Population", y = "GDP")
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
scale_x_continuous() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Relationship between Population and GDP", x = "Population", y = "GDP"coord_cartesian(xlim = c(0, 4e8)))
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
scale_x_continuous() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Relationship between Population and GDP", x = "Population", y = "GDP")+
coord_cartesian(xlim = c(0, 4e8))
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
scale_x_continuous() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Relationship between Population and GDP", x = "Population", y = "GDP")+
coord_cartesian(xlim = c(0, 2e8))
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
scale_x_continuous() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Relationship between Population and GDP", x = "Population", y = "GDP")+
coord_cartesian(xlim = c(0, 4e8))
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
scale_x_continuous() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Relationship between Population and GDP", x = "Population", y = "GDP")+
coord_cartesian(xlim = c(0, 1e8))
# Simple linear regression: GDP vs Population
model <- lm(gdp ~ pop, data = CIA)
ggplot(CIA, aes(x = pop, y = gdp)) +
geom_point(alpha = 0.7) +
scale_x_continuous() +
geom_smooth(method = "lm", se = TRUE, color = "blue") +
labs(title = "Relationship between Population and GDP", x = "Population", y = "GDP")+
coord_cartesian(xlim = c(0, 4e8))
